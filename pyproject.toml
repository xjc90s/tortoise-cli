[project]
name = "tortoise-cli"
dynamic = ["version"]
description = "A cli tool for tortoise-orm, build on top of click and ptpython."
authors = [{name="long2ice", email="long2ice@gmail.com"}]
license = "Apache-2.0"
readme = "README.md"
keywords = ["tortoise", "shell", "cli", "tortoise-orm"]
requires-python = ">=3.9"
dependencies = [
    "tortoise-orm",
    "ptpython",
    "asyncclick (>=8.1.7,<9.0.0)",
    "tomlkit (>=0.11.4,<1.0.0); python_version < '3.11'",
]

[project.urls]
homepage = "https://github.com/tortoise/tortoise-cli"
repository = "https://github.com/tortoise/tortoise-cli.git"
documentation = "https://github.com/tortoise/tortoise-cli"

[tool.poetry]
version = "0.0.0"
packages = [
    { include = "tortoise_cli"}
]

[dependency-groups]
test = [
    "pytest >=8.4.0",
    "pytest-xdist >=3.7.0",
    "pytest-sugar >=1.0.0",
    "pytest-cov >=6.2.1",
]
dev = [
    "ruff >=0.11.13",
    "bandit >=1.8.3",
    "mypy >=1.17.1",
    "twine >=6.1.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
version = {source="file", path="tortoise_cli/__init__.py"}

[tool.pdm.build]
excludes = ["./**/.git", "./**/.*_cache", "images"]
include = ["CHANGELOG.md", "LICENSE", "README.md"]

[project.scripts]
tortoise-cli = "tortoise_cli.cli:main"

[tool.aerich]
tortoise_orm = "examples.TORTOISE_ORM"

[tool.mypy]
pretty = true
check_untyped_defs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100
[tool.ruff.lint]
ignore = ["E501"]
extend-select = [
    "I",      # https://docs.astral.sh/ruff/rules/#isort-i
    "SIM",    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "FA",     # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
    "UP",     # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "RUF100", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]

[tool.bandit]
exclude_dirs = ["tests", "conftest.py"]

[tool.coverage.report]
show_missing = true
exclude_also = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    'if __name == "__main__":',
]
